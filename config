execute pathogen#infect()

filetype plugin indent on
syntax on
colorscheme Tomorrow-Night
hi Normal ctermbg=none

set nocompatible
set number
set hidden
set history=100
set nowrap
set smartcase
set smarttab
set softtabstop=2
set shiftwidth=2
set expandtab
set smartindent
set autoindent
set showmatch

set laststatus=2
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0

let NERDTreeShowHidden=1

let g:SuperTabDefaultCompletionType = '<c-x><c-o>'

if has("gui_running")
  imap <c-space> <c-r>=SuperTabAlternateCompletion("\<lt>c-x>\<lt>c-o>")<cr>
else " no gui
  if has("unix")
    inoremap <Nul> <c-r>=SuperTabAlternateCompletion("\<lt>c-x>\<lt>c-o>")<cr>
  endif
endif

let g:haskellmode_completion_ghc = 1
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc

let g:haskell_tabular = 1

vmap a= :Tabularize /=<CR>
vmap a; :Tabularize /::<CR>
vmap a- :Tabularize /-><CR>i

map <leader>s :source ~/.vimrc<CR>
nmap <leader>t :NERDTreeToggle<CR>
nmap <leader>f :NERDTreeFind<CR>
map <leader>st :SyntasticToggleMode<CR>
map <silent>tw :GhcModTypeInsert<CR>
map <silent>ts :GhcModSplitFunCase<CR>
map <silent>tq :GhcModType<CR>

if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c%m
endif
